"use strict";(self.webpackChunkz_paging_doc=self.webpackChunkz_paging_doc||[]).push([[255],{6184:(t,e,n)=>{n.r(e),n.d(e,{data:()=>l});const l={key:"v-161803e4",path:"/api/props/i18n.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"i18n配置",slug:"i18n配置",children:[]}],filePathRelative:"api/props/i18n.md",git:{updatedTime:1629561936e3}}},8004:(t,e,n)=>{n.r(e),n.d(e,{default:()=>a});const l=(0,n(6252).uE)('<h3 id="i18n配置" tabindex="-1"><a class="header-anchor" href="#i18n配置" aria-hidden="true">#</a> i18n配置</h3><div class="custom-container tip"><p class="custom-container-title">配置步骤</p><ul><li>① 导入<code>z-paging-i18n.js</code>： <code>import zI18n from &#39;@/uni_modules/z-paging/components/z-paging/js/z-paging-i18n&#39;</code></li><li>② 全局设置语言： <code>zI18n.setLanguage(&#39;你要设置的语言&#39;)</code>。支持简体中文(zh-cn)、繁体中文(zh-hant-cn)和英文(en)，传null表示语言跟随系统(默认)。</li><li>③ 获取当前语言(非必须)：<code>const language = zI18n.getLanguageName();</code> 注意：<code>getLanguageName()</code>方法中可以传一个参数(Boolean)用以约束当前获取的语言是否是在不跟随系统语言下获取到的，默认为true。</li><li>具体请查阅demo：<code>i18n-demo.vue</code></li></ul></div><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">说明</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:center;">可选值</th></tr></thead><tbody><tr><td style="text-align:center;">follow-system-language</td><td style="text-align:center;">i18n国际化默认是否跟随系统语言</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">true</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">language</td><td style="text-align:center;"><p style="color:red;">(不常用，一般使用全局语言配置)i</p>18n国际化单独设置当前页面的语言，若设置，则会覆盖全局的语言。支持简体中文(zh-cn)、繁体中文(zh-hant-cn)和英文(en)</td><td style="text-align:center;">String</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr></tbody></table>',3),a={render:function(t,e){return l}}}}]);